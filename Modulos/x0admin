#!/bin/bash
fun_bar () {
comando[0]="$1"
comando[1]="$2"
 (
[[ -e $HOME/fim ]] && rm $HOME/fim
[[ ! -e /usr/lib/sshplus ]] && rm -rf /bin/menu > /dev/null 2>&1
${comando[0]} -y > /dev/null 2>&1
${comando[1]} -y > /dev/null 2>&1
touch $HOME/fim
 ) > /dev/null 2>&1 &
 tput civis
echo -ne "\033[1;33m["
while true; do
   for((i=0; i<18; i++)); do
   echo -ne "\033[1;31m#"
   sleep 0.1s
   done
   [[ -e $HOME/fim ]] && rm $HOME/fim && break
   echo -e "\033[1;33m]"
   sleep 1s
   tput cuu1
   tput dl1
   echo -ne "\033[1;33m["
done
echo -e "\033[1;33m]\033[1;37m -\033[1;32m OK !\033[1;37m"
tput cnorm
}
IP=$(cat /etc/IP)
x="ok"
# MENU TESTEOS
x0admin ()
{
pamcrack () {
echo -e "\033[1;32mDESHABILITAR CONTRASEÑA ALFANUMÉRICAS EN VULTR  \033[0m"
echo -e "\033[1;32mSE PUEDE UTILIZAR CUALQUIER CONTRASEÑA DE 6 DIGITOS \033[0m"
echo ""
read -p "$(echo -ne "\033[1;32mQUÉ QUIERES HACER \033[1;31m? \033[1;33m[s/n]:\033[1;37m ") " -e -i n PROS
[[ $PROS = @(s|S|y|Y) ]] || return 1
echo ""
fun_cracklib () {
## apt-get install libpam-cracklib -y
## wget -O /etc/pam.d/common-password https://raw.githubusercontent.com/AAAAAEXQOSyIpN2JZ0ehUQ/ADM-ULTIMATE-NEW-FREE/master/Install/common-password 
## chmod +x /etc/pam.d/common-password
sed -i 's/.*pam_cracklib.so.*/password sufficient pam_unix.so sha512 shadow nullok try_first_pass #use_authtok/' /etc/pam.d/common-password
service ssh restart
service sshd restart
}
fun_bar "fun_cracklib"
echo ""
echo -e "\033[1;32m CONTRASEÑA ALFANUMÉRICA DESHABILITADA CON ÉXITO"
}

squid_password () {
## Eliminar Tmps
[[ -e $_tmp ]] && rm $_tmp
[[ -e $_tmp2 ]] && rm $_tmp2
[[ -e $_tmp3 ]] && rm $_tmp3
[[ -e $_tmp4 ]] && rm $_tmp4
## FUNCION AGUARDE
fun_bar () {
comando[0]="$1"
comando[1]="$2"
 (
[[ -e $HOME/fim ]] && rm $HOME/fim
${comando[0]} -y > /dev/null 2>&1
${comando[1]} -y > /dev/null 2>&1
touch $HOME/fim
 ) > /dev/null 2>&1 &
 tput civis
echo -ne "\033[1;33m["
while true; do
   for((i=0; i<18; i++)); do
   echo -ne "\033[1;31m#"
   sleep 0.1s
   done
   [[ -e $HOME/fim ]] && rm $HOME/fim && break
   echo -e "\033[1;33m]"
   sleep 1s
   tput cuu1
   tput dl1
   echo -ne "\033[1;33m["
done
echo -e "\033[1;33m]\033[1;37m -\033[1;32m OK !\033[1;37m"
tput cnorm
}
## SQUID AUTHENTICATOR
tmp_arq="/tmp/arq-tmp"
if [ -d "/etc/squid" ]; then
pwd="/etc/squid/passwd"
config_="/etc/squid/squid.conf"
service_="squid"
squid_="0"
elif [ -d "/etc/squid3" ]; then
pwd="/etc/squid3/passwd"
config_="/etc/squid3/squid.conf"
service_="squid3"
squid_="1"
fi
[[ ! -e $config_ ]] && 
## echo "" && 
echo -e "\033[1;32mPROXY SQUID NO INSTALADO, NO PUEDE CONTINUAR" && 
## echo "" && 
return 0
if [ -e $pwd ]; then 
echo -e "\E[44;1;37m           AUTENTIFICACIÓN PROXY SQUID           \E[0m"
echo -e "\n\033[1;33mDESEA DESHABILITAR LA AUTENTIFICACIÓN DE PROXY DE SQUID?"
read -p "$(echo -ne "\n\033[1;32mQUÉ QUIERES HACER \033[1;31m? \033[1;33m[s/n]:\033[1;37m ") " -e -i s sshsn
[[ "$sshsn" = @(s|S|y|Y) ]] && {
echo ""
echo -e " \033[1;32mUninstalling DEPENDENCE:"
echo ""
fun_bar 'apt-get remove apache2-utils'
echo ""
cat $config_ | grep -v '#Password' > $tmp_arq
mv -f $tmp_arq $config_ 
cat $config_ | grep -v '^auth_param.*passwd*$' > $tmp_arq
mv -f $tmp_arq $config_ 
cat $config_ | grep -v '^auth_param.*proxy*$' > $tmp_arq
mv -f $tmp_arq $config_ 
cat $config_ | grep -v '^acl.*REQUIRED*$' > $tmp_arq
mv -f $tmp_arq $config_ 
cat $config_ | grep -v '^http_access.*authenticated*$' > $tmp_arq
mv -f $tmp_arq $config_ 
cat $config_ | grep -v '^http_access.*all*$' > $tmp_arq
mv -f $tmp_arq $config_ 
echo -e "
http_access allow all" >> "$config_"
rm -f $pwd
service $service_ restart  > /dev/null 2>&1 &
echo -e " \033[1;31mAUTENTIFICACIÓN PROXY SQUID DESHABILITADA"
} 
else
echo -e "\E[44;1;37m           AUTENTIFICACIÓN PROXY SQUID           \E[0m"
echo -e "\n\033[1;33mDESEA HABILITAR LA AUTENTIFICACIÓN DE PROXY SQUID?"
read -p "$(echo -ne "\n\033[1;32mQUÉ QUIERES HACER \033[1;31m? \033[1;33m[s/n]:\033[1;37m ") " -e -i n sshsn
[[ "$sshsn" = @(s|S|y|Y) ]] && {
echo ""
echo -e " \033[1;32mInstalling DEPENDENCE:"
echo ""
fun_bar 'apt-get install apache2-utils'
echo ""
read -e -p "Nombre de usuario deseado: " usrn
[[ $usrn = "" ]] && 
echo "" && 
echo -e " \033[1;31mEl usuario no puede ser nulo." && 
echo "" && 
return 0
htpasswd -c $pwd $usrn
succes_=$(grep -c "$usrn" $pwd)
if [ "$succes_" = "0" ]; then
rm -f $pwd
echo ""
echo -e " \033[1;31mError al generar la Contraseña, no se inició la autentificación de squid!"
## echo ""
return 0
elif [[ "$succes_" = "1" ]]; then
cat $config_ | grep -v '^http_access.*all*$' > $tmp_arq
mv -f $tmp_arq $config_ 
if [ "$squid_" = "0" ]; then
echo -e "#Password
auth_param basic program /usr/lib/squid/basic_ncsa_auth /etc/squid/passwd
auth_param basic realm proxy
acl authenticated proxy_auth REQUIRED
http_access allow authenticated
http_access deny all" >> "$config_"
service squid restart  > /dev/null 2>&1 &
update-rc.d squid defaults > /dev/null 2>&1 &
elif [ "$squid_" = "1" ]; then
echo -e "#Password
auth_param basic program /usr/lib/squid3/basic_ncsa_auth /etc/squid3/passwd
auth_param basic realm proxy
acl authenticated proxy_auth REQUIRED
http_access allow authenticated
http_access deny all" >> "$config_"
service squid3 restart > /dev/null 2>&1 &
update-rc.d squid3 defaults > /dev/null 2>&1 &
fi
echo ""
echo -e "\033[1;32m AUTENTIFICACIÓN PROXY SQUID HABILITADA"
## echo ""
fi
}
fi
}

while true $x != "ok"
do
clear
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo -e "\E[44;1;37m              MENU DE SISTEMA                     \E[0m"
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo ""
echo -e "\033[1;31m
[\033[1;36m0x\033[1;31m] \033[1;37m• \033[1;33mPERMISSOES DE AUTENTICACAO DE ROOT \033[1;31m
[\033[1;36m0x\033[1;31m] \033[1;37m• \033[1;33mDESATIVAR SENHA ALPANUMERICA EM VURTL \033[1;31m
[\033[1;36m11\033[1;31m] \033[1;37m• \033[1;33mAUTENTICACAO DE PROCURACAO SQUID \033[1;31m         
[\033[1;36m0x\033[1;31m] \033[1;37m• \033[1;33mINFORMACAO DO SISTEMA \033[1;31m
[\033[1;36m00\033[1;31m] \033[1;37m• \033[1;33mVOLVER AL MENU \033[1;32m<\033[1;33m<\033[1;31m< \033[1;31m"
echo ""
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo ""
echo -ne "\033[1;32mOQUE DESEJA FAZER \033[1;33m?\033[1;31m?\033[1;37m : "; read x

case "$x" in 
   1 | 01)
   clear
   detalhes
   echo -ne "\n\033[1;31mENTER \033[1;33mpara retornar ao \033[1;32mMENU!\033[0m"; read
   ;;
   2 | 02)
   clear
   bash <(wget -qO- https://raw.githubusercontent.com/AAAAAEXQOSyIpN2JZ0ehUQ/ADMPLUS-MANAGER-PRO/main/Install/senharoot.sh)
   echo -ne "\n\033[1;31mENTER \033[1;33mpara retornar ao \033[1;32mMENU!\033[0m"; read
   ;;
   3 | 03)
   clear
   pamcrack
   echo -ne "\n\033[1;31mENTER \033[1;33mpara retornar ao \033[1;32mMENU!\033[0m"; read
   ;;
   4 | 04)
   clear
   squid_password
   echo -ne "\n\033[1;31mENTER \033[1;33mpara retornar ao \033[1;32mMENU!\033[0m"; read
   ;;
   0 | 00)
   menu
   exit;
   ;;
   *)
   echo -e "\n\033[1;31mOpcao invalida !\033[0m"
   sleep 1
esac
done
}
x0admin
#fim